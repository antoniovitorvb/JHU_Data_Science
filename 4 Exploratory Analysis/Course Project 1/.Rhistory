update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 20, minutes = 13)
this_moment
nyc<-now(tzone = "America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart, hours = 17, minutes = 34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long<-interval(last_time, arrive)
how_long
as.period(how_long)
stopwatch()
rm(list=ls())
library("swirl")
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res<-gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
play()
library(dplyr)
arrange(separate(res, col = sex_class, into = c("sex", "class")), grade)
stu2<-separate(res, col = sex_class, into = c("sex", "class"))
group_by(stu2, grade)
stu2<-group_by(stu2, grade)
summarize(stu2, sum(count))
nxt()
submit()
students3
submit()
submit()
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed, status = "passed")
failed<-mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips<-sample(c(0,1), 100, prob = c(0.3, 0.7))
flips<-sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(1, size = 100, prob = 0.7)
flips2<-rbinom(n = 100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5, lambda = 10)
my_pois<-replicate(100, rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(cars, xlabel = "Speed")
plot(cars, xlab = "Speed")
plot(y = cars$speed, x = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
rm(list = ls())
install.packages("XLConnect")
install.packages("Rtools40")
install.packages("XLConnect")
home<-getwd()
load("~/GitHub/JHU_Data_Science/3 Getting and Cleaning Data/.RData")
install.packages("XML")
install.packages("jsonlite")
head(cameraData)
head(cameraData)
print(head(cameraTB))
library(dplry)
cameraData<-read.csv("./data/fixed_speed_camera.csv")
library(data.table)
cameraTB<-as.data.table(cameraData)
head(cameraData)
print(head(cameraTB))
library(data.table)
DT<-data.table(x=rnorm(9), y=rep(c("a","b","c"), each = 3), z=rnorm(9))
DT
tables()
DT[2,]
DT[,2]
DT[1:3]
DT[2:4]
DT[,list(mean(x), sum(z))]
DT[,w:=x+z^2]
DT
getwd()
DT[,m:={aux<-x+z; log2(aux+%)}]
DT[,m:={aux<-x+z; log2(aux+5)}]
DT
DT[,bool:=x>0]
DT
DT[,grouped:=mean(x+w), by=a] # will operate mean(x+w) grouped by the values of a
DT[,grouped:=mean(x+w), by=bool] # will operate mean(x+w) grouped by the values of bool
DT
DT['a']
setkey(DT,y)
DT['a']
big_df<-data.frame(x=rnorm(1E6), y=10*rnorm(1E6))
file<-tempfile()
write.table(big_df, file = file, row.names = F, col.names = T, sep = "\t", quote = F)
system.time(fread(file))
system.time(read.table(file, header = T, sep = "\t"))
library(swirl)
swirl()
library(datasets)
boxplot(Ozone ~ Month, airquality, xlab = "Month",  ylab = "Ozone (ppb)", col.axis="blue", col.lab = "red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(wind, Ozone))
with(airquality, plot(Wind, Ozone))
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City"))
title(main = "Ozone and Wind in New York City")
title(main = "Ozone and Wind in New York City")
length(par())
nameS(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- airquality[airquality$Month == 5]
may <- subset(airquality, Month == 5)
?points
kcxhjbe
points()
points(1,2)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
x<-5
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other
| Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind), lty = 2, lwd = 2)
par(mfrom = c(1,2))
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
data2 <- read.table("household_power_consumption.txt", sep = ";")
setwd("~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1")
data2 <- read.table("household_power_consumption.txt", sep = ";")
head(data2)
data2 <- read.table("household_power_consumption.txt", skip = 1,sep = ";")
head(data2)
sapply(data2, class)
View(data2)
library(dplyr)
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
class(data$Global_active_power)
table(is.na(data$Global_active_power))
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
rm(list = ls())
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
data$Date <- strptime(data$Date, format = "%d/%m/%Y")
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
par(mar = c(4,4,2,1))
hist(gap,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kiloWatts)")
rug(gap)
dev.off()
par(mar = c(4,4,2,1))
hist(gap,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kiloWatts)")
rug(gap)
dev.off()
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
View(data)
data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
wd <- weekdays(data$Date)
time <- strptime(data$Time, format = "%X")
View(time)
table(time)
str(time)
View(time)
head(time)
tail(time)
plot(data$time, gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
plot(data$Time, gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
plot(x = data$Time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
dev.off()
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
plot(x = time,
y = gap,
#type = "l",
ylab = "Global Active Power (kiloWatts)")
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
?strptime
time <- strptime(paste(data$Date, data$Time, sep = " "), format = "%c")
d_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
data2 <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
#data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
time <- strptime(paste(data$Date, data$Time, sep = " "), format = "%c")
#data$Date <- as.Date(data$Date, format = "%d/%m/%Y")
time <- strptime(paste(data2$Date, data2$Time, sep = " "), format = "%c")
rm(list = ls())
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
time <- strptime(paste(data$Date, data$Time, sep = " "),
format = "%d/%m/%Y %H:%M:%S")
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
dev.off()
# PLOT 2
dev.cur()
par(mar = c(4,4,2,1))
time <- strptime(paste(data$Date, data$Time, sep = " "),
format = "%d/%m/%Y %H:%M:%S")
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
dev.copy(png, "plot2.png")
dev.off()
sapply(data, class)
if (!file.exists("household_power_consumption.txt")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "power_consumption.zip")
unzip("power_consumption.zip")
}
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
# PLOT 2
dev.cur()
par(mar = c(4,4,2,1))
time <- strptime(paste(data$Date, data$Time, sep = " "),
format = "%d/%m/%Y %H:%M:%S")
plot(x = time,
y = gap,
type = "l",
ylab = "Global Active Power (kiloWatts)")
dev.copy(png, "plot2.png")
dev.off()
if (!file.exists("household_power_consumption.txt")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "power_consumption.zip")
unzip("power_consumption.zip")
}
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
# PLOT 1
dev.cur()
par(mar = c(4,4,2,1))
hist(gap,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kiloWatts)")
rug(gap)
dev.copy(png, "plot1.png")
dev.off()
View(data)
sub_meter <- data %>%
select(Sub_metering_1:Sub_metering_3)
View(sub_meter)
sapply(sub_meter, class)
sub_meter <- data %>%
select(Sub_metering_1:Sub_metering_3) %>%
sapply(as.numeric)
View(sub_meter)
dim(sub_meter)
sapply(sub_meter, class)
summarize(sub_meter, mean)
class(sub_meter)
sub_meter <- data %>%
select(Sub_metering_1:Sub_metering_3) %>%
sapply(as.numeric())
sub_meter <- data %>%
select(Sub_metering_1:Sub_metering_3)
class(sub_meter)
sub2 <- as.numeric(sub_meter)
head(sub_meter[,1])
head(sub_meter[1,])
sub2 <- as.numeric(sub_meter[,1])
class(sub2)
for (i in 1:3) {
sub_meter[,i] <- as.numeric(sub_meter[,i])
}
sapply(sub_meter, class)
View(sub_meter)
table(is.na(sub_meter))
par(mar = c(4,4,2,1))
plot(x = time,
y = sub_meter,
col = c("black", "red", "blue"),
type = "l",
ylab = "Energy Sub metering")
dev.off()
colours <- c("black", "red", "blue")
for (i in 1:3){
print(colours[i])
}
plot(x = time,
y = sub_meter,
type = "n",
ylab = "Energy sub metering")
plot(x = time,
y = sub_meter$Sub_metering_1,
type = "n",
ylab = "Energy sub metering")
for (i in 1:3) {
## converts each each column into numeric preserving sub_meter as data.frame
sub_meter[,i] <- as.numeric(sub_meter[,i])
lines(x = time,
y = sub_meter[,i],
col = colours[i])
}
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1,
lwd = 5,
col = c("black", "red", "blue"))
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1,
lwd = 2,
col = c("black", "red", "blue"))
dev.off()
if (!file.exists("household_power_consumption.txt")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "power_consumption.zip")
unzip("power_consumption.zip")
}
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
# Subset the necessary variables:
gap <- as.numeric(data$Global_active_power)
time <- strptime(paste(data$Date, data$Time, sep = " "),
format = "%d/%m/%Y %H:%M:%S")
## subsets the 3 last columns
sub_meter <- data %>%
select(Sub_metering_1:Sub_metering_3)
dev.cur()
par(mar = c(4,4,2,1))
plot(x = time,
y = sub_meter$Sub_metering_1,
type = "n",
ylab = "Energy sub metering")
colours <- c("black", "red", "blue")
for (i in 1:3) {
## converts each each column into numeric preserving sub_meter as data.frame
sub_meter[,i] <- as.numeric(sub_meter[,i])
## add to the plot each sub metering
lines(x = time,
y = sub_meter[,i],
col = colours[i])
}
legend("topright",
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = 1,
lwd = 2,
col = c("black", "red", "blue"))
dev.copy(png, "plot3.png")
dev.off()
rm(list = ls())
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot3.R')
View(data)
?par()$oma
par()$oma
?par
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
dev.off()
par()
par()$pin
plot?
?plot
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot3.R')
dev.off()
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
?par
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot3.R')
dev.off()
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot2.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot3.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot1.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
dev.off()
if (!file.exists("household_power_consumption.txt")){
fileURL <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileURL, destfile = "power_consumption.zip")
unzip("power_consumption.zip")
}
if(!require(dplyr)) install.packages("dplyr")
library(dplyr)
data <- read.csv2("household_power_consumption.txt") %>%
subset(Date == "1/2/2007" | Date == "2/2/2007")
# Subset only the Global Active Power then make a histogram:
gap <- as.numeric(data$Global_active_power)
# PLOT 1
dev.cur()
par(mar = c(4,4,2,1))
hist(gap,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kiloWatts)")
rug(gap)
png("plot1.png", width = 480, height = 480)
dev.off()
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot1.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot2.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot3.R')
source('~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/plot4.R')
rm(list = ls())
save.image("~/GitHub/JHU_Data_Science/4 Exploratory Analysis/Course Project 1/.RData")
