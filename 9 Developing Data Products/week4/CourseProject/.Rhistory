y = price,
color = index)
plot_ly(stocks,
x = ~time,
y = ~price,
color = ~index)
stocks <- as.data.frame(EuStockMarkets) %>%
gather(index, price) %>%
mutate(time = rep(time(EuStockMarkets), 4))
data("EuStockMarkets")
head(EuStockMarkets)
stocks <- as.data.frame(EuStockMarkets) %>%
gather(index, price)
head(stocks)
stocks <- as.data.frame(EuStockMarkets) %>%
gather(index, price) %>%
mutate(time = rep(time(EuStockMarkets), 4))
head(stocks)
plot_ly(stocks,
x = ~time,
y = ~price,
color = ~index,
linetype = 2)
plot_ly(stocks,
x = ~time,
y = ~price,
color = ~index)
precip
# Histogram
plot_ly(x = ~precip,
type = "histogram")
iris
# Box Plot
data("iris")
plot_ly(iris,
y = ~pental.Length,
color = ~Species,
type = "box")
plot_ly(iris,
y = ~Petal.Width,
color = ~Species,
type = "box")
plot_ly(iris,
y = ~Petal.Length,
color = ~Species,
type = "box")
ggplot(best_fit)
View(best_fit)
best_fit
full_fit <- lm(mpg ~ . -1, mtcars)
best_fit <- step(full_fit,
direction = "backward", trace = F)
best_fit
data("diamonds")
gg <- ggplot(diamonds,
aes(x = carat,
y = price)) +
geom_point(aes(text = paste("Clarity:", clarity)),
size = 2) +
geom_smooth(aes(colour = cut,
fill = cut)) +
facet_wrap(~ cut)
gg
View(diamonds)
gg <- ggplot(diamonds,
aes(x = carat,
y = price)) +
geom_point(aes(colour = color),
size = 2) +
geom_smooth(aes(colour = cut,
fill = cut)) +
facet_wrap(~ cut)
gg
unique(diamonds$color)
gg <- ggplot(diamonds,
aes(x = carat,
y = price)) +
geom_point() +
geom_smooth(aes(colour = cut,
fill = cut)) +
facet_wrap(~ cut)
gg
d <- diamonds[sample(nrow(diamonds), 10000),]
gg <- ggplot(d,
aes(x = carat,
y = price)) +
geom_point() +
geom_smooth(aes(colour = cut,
fill = cut)) +
facet_wrap(~ cut)
gg
p <- ggplotly(gg)
p
rm(list = ls())
library(plotly)
library(dplyr)
library(tidyr)
data(mtcars)
mtcars$am <- factor(mtcars$am,
labels = c("Automatic", "Manual"))
View(mtcars)
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point(size = hp)
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point(size = ~hp)
gg
range(mtcars$hp)
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point()
gg
gg <-
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth()
gg <-
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
gg
# gg <-
ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
ggplotly(gg)
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = cyl)) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = as.factor(cyl))) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point(aes(color = cyl)) +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.4')
data(mtcars)
mtcars %>%
mutate(am_bool = as.logical(am))
View(mtcars)
mtcars %>%
mutate(am_bool = as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
View(p)
View(mtcars)
?mtcars
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
round(10.9)
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.3')
runApp('test')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny1.5')
runApp('test')
runApp('test')
rm(list = ls())
runApp('test')
rm(list = ls())
runApp('test')
runApp()
runApp('test')
runApp()
rm(list = ls())
runApp('test')
runApp()
rm(list = ls())
runApp('test')
rm(list = ls())
runApp('test')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.6')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny1.4')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny1.5')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.2')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.3')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.4')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.5')
runApp('~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny2.6')
runApp('test')
library(miniUI)
runApp('test')
runApp('test')
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny-gadgets/myfirstgadget.R")
myFirstGadget()
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp()
runApp('test')
runApp()
runApp('test')
mtcars %>%
mutate(am_bool = as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars <- mtcars %>%
mutate(am_bool = as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
subset(mpg >= 20)
mtcars %>%
subset(between(mpg, 20, 30))
mtcars %>%
subset(between(mpg, 20, 25))
mtcars %>%
subset(between(mpg, 20, 21))
mtcars %>%
subset(between(mpg, 21, 22))
runApp('test')
runApp()
runApp('test')
runApp()
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
View(mtcars)
runApp('test')
mtcars %>%
mutate(am = factor(am,
labels = c("Automatic", "Manual")),
manu = as.logical(am),
auto = !as.logical(am))
mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
data(mtcars)
mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
runApp('test')
runApp('test')
mtcars %>%
mtcars %>%
subset(between(mpg,
10,
30),
manu = T,
auto = F)
mtcars <- mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
mtcars %>%
subset(between(mpg,
10,
30),
manu = T,
auto = F)
data(mtcars)
# mtcars$am <- factor(mtcars$am,
#                     labels = c("Automatic", "Manual"))
mtcars <- mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
mtcars %>%
subset(between(mpg,
10,
30),
manu = T,
auto = F)
View(mtcars)
mtcars %>%
subset(between(mpg,
10,
30),
manu = T,
auto = F)
mtcars %>%
subset(between(mpg, 10, 30),
manu == T,
auto == F)
mtcars %>%
subset(between(mpg, 10, 30),
manu == T)
mtcars %>%
subset(between(mpg, 10, 35),
manu == T)
mtcars <- mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
subset(between(mpg, 10, 35),
manu == T)
data(mtcars)
mtcars <- mtcars %>%
mutate(manu = as.logical(am),
auto = !as.logical(am),
am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
subset(between(mpg, 10, 35),
manu == T)
View(mtcars)
mtcars %>%
subset(between(mpg, 10, 35),
am == "Automatic")
mtcars %>%
subset(#between(mpg, 10, 35),
am == "Automatic")
mtcars %>%
subset(between(mpg, 10, 35) &
am == "Automatic")
mtcars %>%
subset(between(mpg, 10, 35),
am == "Automatic")
mtcars %>%
subset(between(mpg, 10, 35) &
am == "Automatic")
mtcars %>%
subset(between(mpg, 20, 25) &
am == "Automatic")
mtcars %>%
subset(between(mpg, 20, 25) &
auto == T &
manu == T)
mtcars %>%
subset(between(mpg, 10, 25) &
auto == T &
manu == T)
mtcars %>%
subset(between(mpg, 10, 25) &
auto == T ||
manu == T)
mtcars %>%
subset(between(mpg, 10, 25) &
auto == T ||
manu == F)
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
"rsconnect" %in% installed.packages()
rsconnect::setAccountInfo(name='antoniovitor', token='C3C9A9E730CBFA879B454561089ECAF3', secret='oJFv66tvc+LU2zUCB9wFTx0jEJaDRjFk0NxX0tv8')
runApp('test')
rm(list = ls())
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
- Shiny Application:
(https://antoniovitor.shinyapps.io/jhu-ddp-shinyapplication/)
- Reproducible Pitch Presentation:
library(shiny)
library(miniUI)
library(dplyr)
library(plotly)
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
ui <- miniPage(
gadgetTitleBar("Select Points by Dragging your Mouse"),
miniContentPanel(
plotOutput(outputId = "plot1",
height = "100%",
brush = "brush1")
)
)
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week1/shiny/shiny-gadgets/gadget1.3.R")
pickTrees()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
mtcarsGadget()
source("~/GitHub/JHU_Data_Science/9 Developing Data Products/week4/CourseProject/mtcarsGadget.R")
gg <- ggplot(mtc,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
mtcars <- mtcars %>%
mutate(am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
subset(between(mpg, 10, 25) &
auto == T ||
manu == F)
gg <- ggplot(mtc,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
mtcars <- mtcars %>%
mutate(am = factor(am,
labels = c("Automatic", "Manual")))
mtcars %>%
subset(between(mpg, 10, 25) &
auto == T ||
manu == F)
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
p <- ggplotly(gg)
p
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Weight (1000 lbs)",
y = "MPG",
color = "Transmission Type")
p <- ggplotly(gg)
p
knitr::opts_chunk$set(echo = FALSE)
library(shiny)
library(dplyr)
library(plotly)
data(mtcars)
mtcars <- mtcars %>%
mutate(am = factor(am,
labels = c("Automatic", "Manual")))
gg <- ggplot(mtcars,
aes(x = wt,
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Weight (1000 lbs)",
y = "MPG",
color = "Transmission Type")
ggplotly(gg)
