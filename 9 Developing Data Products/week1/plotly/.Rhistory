y = "Performance")
football <- data.frame(n = 1:200, cr7 = rnorm(n, mean = 0.0035*n + 0.3, sd = 0.3), ney = rnorm(n, mean = 0.003*n, sd = .8))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance")
football <- data.frame(n = 1:200, cr7 = rnorm(n, mean = 0.0035*n + 0.3, sd = 0.3), ney = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance")
football <- data.frame(n = 1:200, cr7 = rnorm(n, mean = 0.0035*n + 0.25, sd = 0.3), ney = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance")
football <- data.frame(n = 1:200, cr7 = rnorm(n, mean = 0.004*n + 0.25, sd = 0.3), ney = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance",
fill = "Jogador")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance",
legend = "Jogador")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance",
color = "Jogador")
"caret" %in% installed.packages()
library(caret)
library("caret")
install.packages("caret")
library(caret)
change()
change <- function(){
football <- data.frame(n = 1:200,
cr7 = rnorm(n, mean = 0.004*n + 0.25, sd = 0.3),
ney = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance",
color = "Jogador")
}
change()
change <- function(){
n <- 1:200
football <- data.frame(n = 1:200,
cr7 = rnorm(n, mean = 0.004*n + 0.25, sd = 0.3),
ney = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Numero de partidas jogadas",
y = "Performance",
color = "Jogador")
}
change()
library(ggplot2)
library(reshape2)
change()
change()
change <- function(){
n <- 1:200
football <- data.frame(n = 1:200,
cr7 = rnorm(n, mean = 0.004*n + 0.25, sd = 0.3),
neymar = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Número de partidas jogadas",
y = "Performance",
color = "Jogador")
}
change()
change()
change <- function(){
n <- 1:200
football <- data.frame(n = 1:200,
CR7 = rnorm(n, mean = 0.004*n + 0.25, sd = 0.3),
neymar = rnorm(n, mean = 0.003*n, sd = .6))
ft_melted <- melt(as.data.frame(football), id = "n")
ggplot(ft_melted,
aes(x = n,
y = value,
color = variable)) +
geom_point() +
geom_smooth(method = "lm") +
labs(x = "Número de partidas jogadas",
y = "Performance",
color = "Jogador")
}
change()
dataset <- read.csv("AV-Cris-Poletto.csv")
names(dataset)
names(dataset) <- c("campanha", "conjunto", "anuncio", "idade",
"dia", "valor_gasto", "tipo_resultado", "resultados",
"CPR", "cliques", "CTR", "CPC",
"alcance", "impressoes", "frequencia", "CPM",
"engajamentos", "thruplays", "rep25", "rep50",
"rep75", "inicio", "termino")
names(dataset)
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_bar()
library(ggplot2)
library(dplyr)
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_bar()
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_bar(cliques)
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_bar()
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_bar(y)
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_point()
ggplot(dataset,
aes(x = dia,
y = cliques)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset,
aes(x = dia,
y = cliques,
color = idade)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset,
aes(x = dia,
y = cliques,
color = idade)) +
geom_point(size = 2) +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset,
aes(x = dia,
y = cliques,
color = idade)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
theme(axis.text.x = element_text(angle = 90))
dataset_trafego <- dataset[("TRAFEGO" %in% dataset$campanha),]
View(dataset)
dataset_trafego <- dataset[,("TRAFEGO" %in% dataset$campanha)]
View(dataset_trafego)
dataset_trafego <- dataset[which("TRAFEGO" %in% dataset$campanha))]
dataset_trafego <- dataset[which("TRAFEGO" %in% dataset$campanha)]
dataset_trafego <- dataset[grep("TRAFEGO", dataset$campanha)]
dataset_trafego <- dataset[grep("TRAFEGO", dataset$campanha),]
View(dataset_trafego)
ggplot(dataset_trafego,
aes(x = dia,
y = cliques,
color = idade)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
theme(axis.text.x = element_text(angle = 90))
theme(axis.text.x = element_text(angle = 90))
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset_trafego,
aes(x = dia,
y = cliques) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset_trafego,
aes(x = dia,
y = cliques)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset_trafego,
aes(x = dia,
y = cliques)) +
geom_point(size = 2) +
geom_smooth() +
theme(axis.text.x = element_text(angle = 90))
ggplot(dataset_trafego,
aes(x = dia,
y = cliques,
color = idade)) +
geom_point(size = 2) +
theme(axis.text.x = element_text(angle = 90))
melted_trafego <- melt(as.data.frame(dataset_trafego), id = "n")
library(reshape2)
melted_trafego <- melt(as.data.frame(dataset_trafego), id = "n")
melted_trafego <- melt(as.data.frame(dataset_trafego), id = "idade")
ggplot(melted_trafego,
aes(x = dia,
y = cliques)) +
geom_point(size = 2) +
geom_smooth(method = "lm") +
theme(axis.text.x = element_text(angle = 90))
View(melted_trafego)
melted_trafego <- melt(as.data.frame(dataset_trafego), id = "campanha")
View(melted_trafego)
melted_trafego <- select(dataset_trafego, dia, cliques, idade) %>%
melt(as.data.frame(), id = "idade")
melted_trafego <- select(dataset_trafego, dia, cliques, idade)
melted_trafego <- melt(as.data.frame(melted_trafego), id = "idade")
View(melted_trafego)
melted_trafego <- select(dataset_trafego, dia, cliques, idade)
View(melted_trafego)
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products")
library(shiny)
library(miniUI)
install.packages("miniUI")
library(miniUI)
dir.create("shiny Gadgets")
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products/shiny Gadgets")
myFirstGadget <- function(){
ui <- miniPage(
gadgetTitleBar("My First Gadget")
)
server <- function(input, output, session){
# the Done button closes the app
observeEvent(input$done, {
stopApp()
})
}
runGadget(ui, server)
}
myFirstGadget()
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products")
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products/shiny-gadgets")
multiplyNumbers <- function(numbers1, numbers2){
ui <- miniPage(
gadgetTitleBar("Multiply Two Numbers"),
miniContentPanel(
selectInput(inputId = "num1",
label = "First Number",
choices = numbers1),
selectInput(inputId = "num2",
label = "Second Number",
choices = numbers2)
)
)
server <- function(input, output, session){
observeEvent(input$done, {
num1 <- as.numeric(input$num1)
num2 <- as.numeric(input$num2)
stopApp(num1 * num2)
})
}
runGadget(ui, server)
}
multiplyNumbers()
multiplyNumbers(3, 8)
multiplyNumbers(c(1:3), c(6:8))
multiplyNumbers(c(1:3), c(6:8))
multiplyNumbers(1:9, 1:9)
pickTrees <- function(){
ui <- miniPage(
gadgetTitleBar("Select Points by Dragging your Mouse"),
miniContentPanel(
plotOutput(outputId = "plot",
height = "100%",
brush = "brush")
)
)
server <- function(input, output, session){
output$plot <- renderPlot({
plot(x = trees$Girth,
y = trees$Volume,
main = "Trees!",
xlab = "Girth",
ylab = "Volume")
})
observeEvent(eventExpr = input$done,
handlerExpr = {
stopApp(brushedPoints(df = trees,
brush = input$brush,
xvar = "Girth",
yvar = "Volume"))
})
}
}
pickTrees()
pickTrees <- function(){
ui <- miniPage(
gadgetTitleBar("Select Points by Dragging your Mouse"),
miniContentPanel(
plotOutput(outputId = "plot",
height = "100%",
brush = "brush")
)
)
server <- function(input, output, session){
output$plot <- renderPlot({
plot(x = trees$Girth,
y = trees$Volume,
main = "Trees!",
xlab = "Girth",
ylab = "Volume")
})
observeEvent(eventExpr = input$done,
handlerExpr = {
stopApp(brushedPoints(df = trees,
brush = input$brush,
xvar = "Girth",
yvar = "Volume"))
})
}
runGadget(ui, server)
}
pickTrees()
pickTrees()
source("gadget1.3.R")
pickTrees()
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products")
dir.create("GoogleVis")
setwd("/GoogleVis")
setwd("GoogleVis")
install.packages("GoogleVis")
install.packages("googleVis")
fruits
data(Exports)
demo(googleVis)
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
print(M,"chart")
G <- gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",options=list(width=600, height=400))
print(G,"chart")
G2 <- gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",options=list(width=600, height=400,region="150"))
print(G2,"chart")
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
print(Line,"chart")
G <- gvisGeoChart(Exports, "Country", "Profit",options=list(width=200, height=100))
T1 <- gvisTable(Exports,options=list(width=200, height=270))
M <- gvisMotionChart(Fruits, "Fruit", "Year", options=list(width=400, height=370))
GT <- gvisMerge(G,T1, horizontal=FALSE)
GTM <- gvisMerge(GT, M, horizontal=TRUE,tableOptions="bgcolor=\"#CCCCCC\" cellspacing=10")
df <- data.frame(label=c("US", "GB", "BR"), val1=c(1,3,4), val2=c(23,12,32))
Line <- gvisLineChart(df, xvar="label", yvar=c("val1","val2"),
options=list(title="Hello World", legend="bottom",
titleTextStyle="{color:'red', fontSize:18}",
vAxis="{gridlines:{color:'red', count:3}}",
hAxis="{title:'My Label', titleTextStyle:{color:'blue'}}",
series="[{color:'green', targetAxisIndex: 0},
{color: 'blue',targetAxisIndex:1}]",
vAxes="[{title:'Value 1 (%)', format:'##,######%'},
{title:'Value 2 (\U00A3)'}]",
curveType="function", width=500, height=300
))
print(Line,"chart")
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
print(M,"chart")
setwd("~/GitHub/JHU_Data_Science/9 Developing Data Products/plotly")
install.packages("plotly")
library(plotly)
(data = mtcars,
x = wt,
y = mpg,
mode = "markers")
plot_ly(data = mtcars,
x = wt,
y = mpg,
mode = "markers")
data("mtcars")
plot_ly(data = mtcars,
x = wt,
y = mpg,
mode = "markers")
View(mtcars)
plot_ly(data = mtcars,
x = wt,
y = mpg,
mode = "markers")
mtcars$wt
plot_ly(data = mtcars, x = wt,
y = mpg,
mode = "markers")
head(mtcars)
head(mtcars$wt)
getwd()
plot_ly(mtcars,
x = wt,
y = mpg,
mode = "markers")
plot_ly(mtcars,
x = mtcars$wt,
y = mpg,
mode = "markers")
plot_ly(mtcars,
x = wt,
y = mpg,
mode = "markers")
plot_ly(mtcars,
x = wt,
y = mpg,
mode = "markers")
rm(list = ls())
data("mtcars")
plot_ly(mtcars,
x = wt,
y = mpg,
mode = "markers")
?mtcars
plot_ly(mtcars,
wt,
mpg,
mode = "markers")
plot_ly(mtcars,
x = mpg,
y = mpg,
mode = "markers")
plot_ly(mtcars,
x = mpg,
y = wt,
mode = "markers")
plot_ly(mtcars,
x = hp,
y = mpg,
mode = "markers")
plot_ly(mtcars,
x = mpg,
y = hp,
mode = "markers")
library(plotly)
data("mtcars")
plot_ly(data = mtcars,
x = mpg,
y = hp,
mode = "markers")
data1 <- mtcars
plot_ly(data = data1,
x = wt,
y = mpg,
mode = "markers")
plot_ly(data = data1,
x = wt,
y = mpg)
