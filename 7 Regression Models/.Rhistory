library(UsingR)
data(mtcars)
carslm <- lm(mtcars$mpg ~ mtcars$wt)
plot(fit)
summary(carslm)
?mtcars
?predict
n <- 100
x <- rnorm(n); x2 <- rnorm(n); x3 <- rnorm(n)
y <- 1 + x + x2 + x3 + rnorm(n, sd = 0.1) # noise error
ey <- resid(lm(y ~ x2 + x3))
ex <- resid(lm(x ~ x2 + x3))
sum(ey * ex)/sum(ex^2)
coef(lm(ey ~ ex -1))
# this is equal to
coef(lm(y ~ x + x2 + x3))
library(swirl)
swirl()
fit <- lm(Numeric ~ Year, hunger)
summary(fit)$coef
lmF <- lm(Numeric[hunger$Sex=="Female"] ~ Year, hunger)
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female"])
.
mean(fit)
lmF <- lm(hunger$Numeric[hunger$Sex=="Female"] ~ hunger$Year[hunger$Sex=="Female"])
lmM <- lm(hunger$Numeric[hunger$Sex=="Male"] ~ hunger$Year[hunger$Sex=="Male"])
lmBoth <- lm(Numeric, Year + Sex, hunger)
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunegr)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
View(out2)
plot(fit, which = 1)
fitno <- lm(out2$y[-1,] ~ out2$x[-1,])
fitno <- lm(out2$y[-1,] ~ out2$x[-1,])
fitno <- lm(y ~ x, out2[-1,])
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1,])
1-resid(fit)/resno
1-resid(fit)[1/resno
1-resid(fit)[1/resno]
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma <- sqrt(sd(resid(fit))/2)
sigma <- sqrt(deviance(fit)/df.residual(fit))
rstd <- resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno) / df.residual(fitno))
resid(fit)[1] / (sigma1*sqrt(1 - hatvalues(fit)[1]))
rstudent(fit)[1]
head(rstudent(fit))
dy <- predcit(fit, out2) - predict(fitno, out2)
dy <- predict(fit, out2) - predict(fitno, out2)
dy/(2*sigm^2)
dy/(2*sigma^2)
sum(dy^2)/(2*sigma^2)
plot(fit, which = 5)
rm(list = ls())
"manipulate" %in% installec.packages()
"manipulate" %in% installed.packages()
install.packages(manipulate)
install.packages("manipulate")
"manipulate" %in% installed.packages()
"reticulate" %in% installed.packages()
install.packages("savewav")
?fft
n <- seq(0:4*pi, by = 0.01)
n <- seq(0:(4*pi), by = 0.01)
n <- seq(0, (4*pi), by = 0.01)
fft(n)
plot(fft(n))
rnomr()
rnomr(1)
rnorm()
rnorm(1)
n <- sqe(0, 4*pi, by = 0.05)
x <- vector()
for(i in 1:10){
for(j in 1:n){
x[j] <- x[j] + sin(10*rnorm(1))
}
}
rm(list = ls())
library(swirl)
swirl()
apply()
apply
?apply
rgp1()
rgp2()
force(swiss)
View(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ . - Examination, swiss)
vif(mdl2)
?rnorm
simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d
d <- deviance(fit3)/43
n <- (deviance(fit1) - deviance(fit3)) / 2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
anova
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(readr)
Cris_poletto_Campanhas_21_de_Jan_de_2022_4_de_Fev_de_2022 <- read_csv("Cris-poletto-Campanhas-21-de-Jan-de-2022-4-de-Fev-de-2022.csv")
View(Cris_poletto_Campanhas_21_de_Jan_de_2022_4_de_Fev_de_2022)
rm(list = ls())
library(readr)
AV_Cris_Poletto <- read_csv("AV-Cris-Poletto.csv")
View(AV_Cris_Poletto)
str(AV_Cris_Poletto)
names(AV_Cris_Poletto) <- c("campanha", "conjunto de anuncios", "anuncio", "idade", "dia",
"valor-gasto", "tipo resultado", "resultado", "CPR", "cliques",
"CTR", "CPC", "alcance", "impressoes", "frequencia",
"CPM", "engajamento publi", "thruplays", "reproducao 25%", "reproducao 50%",
"reproducao 75%", "inicio", "fim")
write.csv(AV_Cris_Poletto, file = "crispoletto-feb-jan")
write.csv(AV_Cris_Poletto, file = "crispoletto-feb-jan.csv")
?stri_enc_toutf8
?stri_enc_toutf8
apply(X = AV_Cris_Poletto, 2, FUN = stri_enc_toutf8)
require(stringi)
apply(X = AV_Cris_Poletto, 2, FUN = stri_enc_toutf8)
head(stri_enc_toutf8(AV_Cris_Poletto$`tipo resultado`),10)
identical(stri_enc_toutf8(AV_Cris_Poletto$`tipo resultado`), AV_Cris_Poletto$`tipo resultado`)
stri_enc_mark(AV_Cris_Poletto$`tipo resultado`)
stri_encode(AV_Cris_Poletto$`tipo resultado`, "", "UTF-8")
AV_Cris_Poletto$`tipo resultado`<-stri_encode(AV_Cris_Poletto$`tipo resultado`, "", "UTF-8")
AV_Cris_Poletto$anuncio <- stri_encode(AV_Cris_Poletto$anuncio, "", "UTF-8")
>
AV_Cris_Poletto$anuncio <- stri_encode(AV_Cris_Poletto$anuncio, "", "UTF-8")
write.csv(AV_Cris_Poletto, file = "crispoletto-feb-jan.csv")
CP <- AV_Cris_Poletto
?FindReplace
require(DataCombine)
install.packages("DataCombine")
?FindReplace
library(DataCombine)
?FindReplace
repacedata <- data.frame(from = c("รง", "รฃ"), to = c("c", "a"))
setwd("~/GitHub/JHU_Data_Science/7 Regression Models")
data(mtcars)
?mtcars
mtcars$am <- factor(mtcars$am)
head(mtcars)
head(mtcars,10)
library(dplyr)
mtcars2<-mtcars
mtcars2 <- mutate(mtcars2, am = factor(mtcars$am, labels = c("Automatic", "Manual")))
head(mtcars2, 10)
mtcars2$am <- factor(mtcars2$am, labels = c("Auto", "Manu"))
head(mtcars2, 10)
knitr::opts_chunk$set(echo = TRUE)
ggplot(aes(x = am,
y = mpg)) +
geom_boxplot()
library(ggplot2)
library(dplyr)
data(mtcars)
mtcars$am <- factor(mtcars$am, labels = c("Automatic", "Manual"))
ggplot(aes(x = am,
y = mpg)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_boxplot()
library(ggplot2)
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_boxplot(fill = am)
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot()
full_fit <- lm(mpg ~ ., mtcars)
summary(mtcars)$coef
summary(full_fit)$coef
summary(full_fit)
ggplot(mtcars2,
aes(x = am,
y = mpg)) +
geom_boxplot()
aes(x = am,
geom_boxplot()
ggplot(mtcars2,
aes(x = am + cyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars2,
aes(x = amcyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars2,
aes(x = amcyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars2,
aes(x = am cyl,
y = mpg,
fill = am)) +
geom_boxplot()
apply(mtcars2, 2, class)
View(mtcars2)
mtcars2$amcyl <- with(mtcars2, interaction(am, cyl))
ggplot(mtcars2,
aes(x = amcyl,
y = mpg,
fill = am)) +
geom_boxplot()
fit <- lm(mpg ~ am, mtcarts)
fit <- lm(mpg ~ am, mtcars)
summary(mtcars)
summary(fit)
plot(fit)
fit <- lm(mpg ~ am -1, mtcars)
summary(fit)
fit <- lm(mpg ~ am, mtcars)
full_fit <- lm(mpg ~ ., mtcars)
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot()
fit <- lm(mpg ~ am, mtcars)
summary(fit)
summary(full_fit)
?summary
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = cyl)) +
geom_boxplot()
ggplot(mtcars2,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars2,
aes(x = am,
y = mpg,
fill = cyl)) +
geom_boxplot()
mtcars$cyl <- factor(mtcars$cyl)
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = cyl)) +
geom_boxplot()
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot()
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot() +
legend("Transmission")
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(fill = "Transmission")
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(fill = "Transmission",
x = "Number of Cylinders")
mtcars$cyl <- factor(mtcars$cyl)
ggplot(mtcars,
aes(x = cyl,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(fill = "Transmission",
x = "Number of Cylinders")
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(x = "")
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(x = "", legend = "")
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(x = "", legend = "")
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(x = "", fill = "")
par(mfrow = c(2,2))
plot(full_fit)
?t.test
fullfit <- lm(mpg ~ . -1, mtcars)
summary(fullfit)
data(mtcars)
mtcars$am <- factor(mtcars$am, labels = c("Automatic", "Manual"))
fullfit <- lm(mpg ~ . -1, mtcars)
summary(fullfit)
with(mtcars, aggregate(mpg ~ am, mean))
with(mtcars, aggregate(mpg ~ am, FUN = mean))
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = cyl)) +
geom_smooth()
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_smooth()
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_smooth(method = "lm")
View(mtcars)
rnames(mtcars)
row.names(mtcars)
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg)) +
geom_smooth(method = "lm")
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg)) +
geom_point()
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg)) +
geom_point(fill = am)
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg)) +
geom_point(fill = "am")
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg,
fill = am)) +
geom_point()
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg,
color = am)) +
geom_point()
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg,
color = am)) +
geom_point() +
geom_smooth()
ggplot(mtcars,
aes(x = row.names(mtcars),
y = mpg,
color = am)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(fit)
ggplot(fit) +
geom_smooth()
View(fit)
class(fit)
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_point() +
stat_smooth(method = "lm")
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_point() +
geom_smooth(method = "lm",
col = "red")
ggplot(mtcars,
aes(x = am,
y = mpg)) +
geom_point() +
stat_smooth(method = "lm",
col = "red")
summary(fit)
step(full_fit, direction = "backwards")
step(full_fit, direction = "backward")
?step
VIF(fit)
vif(fit)
library(regclass)
install.packages(regclass)
install.packages("regclass")
vif(fit)
library(regclass)
vif(fit)
vif(FIT)
VIF(fit)
VIF?
?vif
?VIF
VIF(full_fit)
VIF(full_fit)
VIF(fit)
fit2 <- lm(mpg ~ am + factor(mtcars$cyl), mcars)
fit2 <- lm(mpg ~ am + factor(mtcars$cyl), mtcars)
vIF(fit2)
VIF(fit2)
fit2 <- lm(mpg ~ am + cyl, mtcars)
VIF(fit2)
fit2 <- lm(mpg ~ am + cyl, mtcars)
VIF(fit2)
VIF(full_fit)
fit2 <- lm(mpg ~ am + cyl, mtcars)
print("VIF fot fit2:")
VIF(fit2)
print("VIF fot full_fit:")
VIF(full_fit)
VIF(full_fit)$r2
?step
?t.test
t.test(mpg~am)
t.test(mpg~am, mtcars)
t.test(mpg~am, mtcars)$p.value
t.test(mpg~am, mtcars)$estimate
ggplot(mtcars,
aes(x = am,
y = mpg,
fill = am)) +
geom_boxplot() +
labs(x = "", fill = "")
fit <- lm(mpg ~ am, mtcars)
summary(fit)
final_fit <- step(full_fit, direction = "backward")
final_fit <- step(full_fit, direction = "backward")
VIF(final_fit)
VIF(final_fit)$am
VIF(final_fit)[3]
final_fit <- step(full_fit, direction = "backward", trace = F)
#VIF(final_fit)
step(full_fit, direction = "backward", trace = F)
final_fit
final_fit <- step(full_fit, direction = "backward", trace = F)
final_fit
VIF(final_fit)
confint(final_fit)[,'amManual']
confint(final_fit)['amManual',]
knitr::opts_chunk$set(echo = TRUE)
full_fit <- lm(mpg ~ ., mtcars)
summary(full_fit)
rm(list = ls())
